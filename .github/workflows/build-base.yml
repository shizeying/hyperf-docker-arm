name: Build Base Image

on:
  push:
  workflow_dispatch:
    inputs:
      event:
        description: 'Input your event'
        required: true
        default: ''


jobs:
  build:
    name: Build Base Image
    runs-on: 'ubuntu-latest'
    env:
      PHP_VERSION: '${{ matrix.php-version }}'
      ALPINE_VERSION: '${{ matrix.alpine-version }}'
    strategy:
      matrix:
        php-version: [ '7.4' ]
        alpine-version: [ '3.13', '3.14', '3.15', '3.16', '3.17' ]
#        exclude:
#          - php-version: '7.4'
#            alpine-version: '3.16'
#          - php-version: '7.4'
#            alpine-version: '3.17'
#          - php-version: '8.0'
#            alpine-version: '3.17'
      max-parallel: 12
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Fetch the Dockerfile
        id: fetch-dockerfile
        shell: php {0}
        run: |
          <?php
          $alpineVersion = getenv('ALPINE_VERSION');
          $phpVersion = getenv('PHP_VERSION');
          if ($phpVersion == '8.1' && in_array($alpineVersion, ['3.13', '3.14', '3.15'])) {
              $dockerfile = 'alpine-base';
          } else {
              $dockerfile = 'alpine-origin-base';
          }
          echo "::set-output name=dockerfile::" . $dockerfile . PHP_EOL;
#      - name: Build
#        run: |
#          docker-compose build ${{ steps.fetch-dockerfile.outputs.dockerfile }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }} # 你的个人访问令牌
      - name: Build and push
        if: ${{ github.event.inputs.event == 'publish' }}
        run: |
          cd build
          docker buildx build . --file Dockerfile --tag ghcr.io/hyperf:${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-base --platform linux/amd64,linux/arm64  --push
